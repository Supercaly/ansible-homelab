{{ ansible_managed | comment(decoration='# ') }}

# The Caddyfile is an easy way to configure your Caddy web server.
# For a guide on how to use the Caddyfile check the
# [official docs](https://caddyserver.com/docs/caddyfile), for a
# complete list of all the available directives check
# [this](https://caddyserver.com/docs/caddyfile/directives).

{% macro log_to_file(domain) -%}
    # Use custom log file
    log {
        level INFO
        output file var/log/caddy/{{ domain | replace('.','_') }}-access.log
    }
{%- endmacro -%}

{% macro block_access_outside() -%}
    # Block access to IPs from the outside world
    @outside_ip not remote_ip private_ranges
    respond @outside_ip 403 {
        close
    }
{%- endmacro -%}

#################
# Global Options.
#################
{
    # TODO: This parameter is used only for test
    local_certs

    # Enable admin endpoint
    admin :2019

    # Email for SSL certificate
    email {{ caddy_email }}
}

##########
# Domains.
##########

# Main Domain
https://{{ proxy_base_domain }} {
    {{ log_to_file(proxy_base_domain) }}
    encode gzip
    respond "Hello from Caddy"
}

# Domain for NTFY
https://{{ proxy_ntfy_domain }} {
    {{ log_to_file(proxy_ntfy_domain) }}
    {{ block_access_outside() }}
    encode gzip
    reverse_proxy {{ proxy_ntfy_address }}:{{ proxy_ntfy_port }}
}
# Domain for influxdb
https://{{ proxy_influxdb_domain }} {
    {{ log_to_file(proxy_influxdb_domain) }}
    {{ block_access_outside() }}
    encode gzip
    reverse_proxy {{ proxy_influxdb_address }}:{{ proxy_influxdb_port }}
}

# Domain for portfolio
https://{{ proxy_portfolio_domain }} {
    {{ log_to_file(proxy_portfolio_domain) }}
    {{ block_access_outside() }}
    encode gzip
    reverse_proxy {{ proxy_portfolio_address }}:{{ proxy_portfolio_port }}
}

# Domain for filebrowser
https://{{ proxy_filebrowser_domain }} {
    {{ log_to_file(proxy_filebrowser_domain) }}
    {{ block_access_outside() }}
    encode gzip
    reverse_proxy {{ proxy_filebrowser_address }}:{{ proxy_filebrowser_port }}
}

# Domain for portainer
https://{{ proxy_portainer_domain }} {
    {{ log_to_file(proxy_portainer_domain) }}
    {{ block_access_outside() }}
    encode gzip
    reverse_proxy {{ proxy_portainer_address }}:{{ proxy_portainer_port }}
}
