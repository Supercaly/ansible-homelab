---
#########################################
# Play that creates the LXC on the node.
#########################################
- name: Create ntfy LXC.
  hosts: node
  become: true
  vars_files:
    - "{{ inventory_dir }}/host_vars/ntfy.yml"
    - "{{ inventory_dir }}/group_vars/lxcs/vars.yml"
    - "{{ inventory_dir }}/group_vars/lxcs/vault.yml"
  roles:
    - role: roles/create-lxc

#############################
# Play that sets up the host.
#############################
- name: Provision ntfy LXC.
  hosts: ntfy
  become: true

  handlers:
    - name: restart ntfy service
      ansible.builtin.service:
        name: ntfy
        state: restarted

  roles:
    - role: roles/setup-base-lxc

  tasks:
    - name: Install ntfy.
      block:
        - name: Add ntfy's repository to apt.
          ansible.builtin.deb822_repository:
            name: NTFY
            architectures: amd64
            components: main
            signed_by: https://archive.heckel.io/apt/pubkey.txt
            suites: debian
            types: deb
            uris: https://archive.heckel.io/apt

        - name: Insall ntfy from the official repository.
          ansible.builtin.apt:
            name:
              - ntfy
            update_cache: true
            state: present

        - name: Create ntfy directories and set permissions.
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            owner: "{{ ntfy_system_user }}"
            group: "{{ ntfy_system_group }}"
            mode: "0700"
          loop:
            - "{{ ntfy_dirs_data }}"
            - "{{ ntfy_dirs_cache }}"
            - "{{ ntfy_dirs_log }}"

        - name: Enable ntfy service on boot.
          ansible.builtin.service:
            name: ntfy
            enabled: true
            state: started

    - name: Generate server configuration from template.
      ansible.builtin.template:
        src: server.j2
        dest: /etc/ntfy/server.yml
      notify: restart ntfy service

    - name: Add admin user to the ntfy user database.
      ansible.builtin.command:
        cmd: "ntfy user add --role=admin --ignore-exists {{ ntfy_admin_user }}"
      environment:
        NTFY_PASSWORD: "{{ ntfy_admin_password }}"
      register: ntfy_add_user_result
      changed_when: "'added' in ntfy_add_user_result.stderr"
